{"ast":null,"code":"var _jsxFileName = \"/root/Development/Phase-4-Group-Project/group-3-habit-tracker/frontend/src/components/HabitForm.js\";\nimport React from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport './HabitForm.css'; // Import the updated CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HabitForm = () => {\n  const initialValues = {\n    name: '',\n    description: ''\n  };\n  const validationSchema = Yup.object({\n    name: Yup.string().required('Required'),\n    description: Yup.string().max(200, 'Must be 200 characters or less')\n  });\n  const onSubmit = values => {\n    console.log(values); // You can perform API call or other actions here\n  };\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: initialValues,\n    validationSchema: validationSchema,\n    onSubmit: onSubmit,\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      className: \"form-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"form-title\",\n        children: \"Create a New Habit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          id: \"name\",\n          name: \"name\",\n          type: \"text\",\n          className: \"form-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          name: \"name\",\n          component: \"div\",\n          className: \"error-message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"description\",\n          children: \"Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          id: \"description\",\n          name: \"description\",\n          as: \"textarea\",\n          className: \"form-textarea\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          name: \"description\",\n          component: \"div\",\n          className: \"error-message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"form-submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_c = HabitForm;\nexport default HabitForm;\nvar _c;\n$RefreshReg$(_c, \"HabitForm\");","map":{"version":3,"names":["React","Formik","Form","Field","ErrorMessage","Yup","jsxDEV","_jsxDEV","HabitForm","initialValues","name","description","validationSchema","object","string","required","max","onSubmit","values","console","log","children","className","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","type","component","as","_c","$RefreshReg$"],"sources":["/root/Development/Phase-4-Group-Project/group-3-habit-tracker/frontend/src/components/HabitForm.js"],"sourcesContent":["import React from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport './HabitForm.css'; // Import the updated CSS file\n\nconst HabitForm = () => {\n  const initialValues = {\n    name: '',\n    description: ''\n  };\n\n  const validationSchema = Yup.object({\n    name: Yup.string().required('Required'),\n    description: Yup.string().max(200, 'Must be 200 characters or less')\n  });\n\n  const onSubmit = (values) => {\n    console.log(values); // You can perform API call or other actions here\n  };\n\n  return (\n    <Formik initialValues={initialValues} validationSchema={validationSchema} onSubmit={onSubmit}>\n      <Form className=\"form-container\">\n        <h2 className=\"form-title\">Create a New Habit</h2>\n        <div>\n          <label htmlFor=\"name\">Name</label>\n          <Field id=\"name\" name=\"name\" type=\"text\" className=\"form-input\" />\n          <ErrorMessage name=\"name\" component=\"div\" className=\"error-message\" />\n        </div>\n        <div>\n          <label htmlFor=\"description\">Description</label>\n          <Field id=\"description\" name=\"description\" as=\"textarea\" className=\"form-textarea\" />\n          <ErrorMessage name=\"description\" component=\"div\" className=\"error-message\" />\n        </div>\n        <button type=\"submit\" className=\"form-submit\">Submit</button>\n      </Form>\n    </Formik>\n  );\n};\n\nexport default HabitForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}