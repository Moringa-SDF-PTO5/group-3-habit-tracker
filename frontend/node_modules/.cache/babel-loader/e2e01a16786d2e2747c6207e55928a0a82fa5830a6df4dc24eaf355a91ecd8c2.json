{"ast":null,"code":"var _jsxFileName = \"/root/Development/Phase-4-Group-Project/group-3-habit-tracker/frontend/src/components/Dashboard.js\",\n  _s = $RefreshSig$();\n// src/components/Dashboard.js\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './Dashboard.css'; // Assuming you have a CSS file for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [habits, setHabits] = useState([]);\n  const navigate = useNavigate();\n  useEffect(() => {\n    fetch('/habits.json').then(response => response.json()).then(data => {\n      if (Array.isArray(data)) {\n        setHabits(data);\n      } else {\n        console.error('Fetched data is not an array:', data);\n      }\n    }).catch(error => {\n      console.error('Error fetching habits:', error);\n    });\n  }, []);\n  const handleHabitClick = id => {\n    navigate(`/habits/${id}`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Your Habits\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"habit-list\",\n      children: habits.length > 0 ? habits.map(habit => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"habit-item\",\n        onClick: () => handleHabitClick(habit.id),\n        children: habit.name\n      }, habit.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No habits found. Please add some habits.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"Ly1V7EhSaDs8veQdayNnWX0OpkI=\", false, function () {\n  return [useNavigate];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","jsxDEV","_jsxDEV","Dashboard","_s","habits","setHabits","navigate","fetch","then","response","json","data","Array","isArray","console","error","catch","handleHabitClick","id","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","habit","onClick","name","_c","$RefreshReg$"],"sources":["/root/Development/Phase-4-Group-Project/group-3-habit-tracker/frontend/src/components/Dashboard.js"],"sourcesContent":["// src/components/Dashboard.js\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './Dashboard.css'; // Assuming you have a CSS file for styling\n\nconst Dashboard = () => {\n  const [habits, setHabits] = useState([]);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    fetch('/habits.json')\n      .then(response => response.json())\n      .then(data => {\n        if (Array.isArray(data)) {\n          setHabits(data);\n        } else {\n          console.error('Fetched data is not an array:', data);\n        }\n      })\n      .catch(error => {\n        console.error('Error fetching habits:', error);\n      });\n  }, []);\n\n  const handleHabitClick = (id) => {\n    navigate(`/habits/${id}`);\n  };\n\n  return (\n    <div className=\"dashboard-container\">\n      <h1>Your Habits</h1>\n      <ul className=\"habit-list\">\n        {habits.length > 0 ? (\n          habits.map(habit => (\n            <li key={habit.id} className=\"habit-item\" onClick={() => handleHabitClick(habit.id)}>\n              {habit.name}\n            </li>\n          ))\n        ) : (\n          <p>No habits found. Please add some habits.</p>\n        )}\n      </ul>\n    </div>\n  );\n};\n\nexport default Dashboard;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAO,iBAAiB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAMQ,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAE9BF,SAAS,CAAC,MAAM;IACdU,KAAK,CAAC,cAAc,CAAC,CAClBC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAI;MACZ,IAAIC,KAAK,CAACC,OAAO,CAACF,IAAI,CAAC,EAAE;QACvBN,SAAS,CAACM,IAAI,CAAC;MACjB,CAAC,MAAM;QACLG,OAAO,CAACC,KAAK,CAAC,+BAA+B,EAAEJ,IAAI,CAAC;MACtD;IACF,CAAC,CAAC,CACDK,KAAK,CAACD,KAAK,IAAI;MACdD,OAAO,CAACC,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAChD,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,MAAME,gBAAgB,GAAIC,EAAE,IAAK;IAC/BZ,QAAQ,CAAC,WAAWY,EAAE,EAAE,CAAC;EAC3B,CAAC;EAED,oBACEjB,OAAA;IAAKkB,SAAS,EAAC,qBAAqB;IAAAC,QAAA,gBAClCnB,OAAA;MAAAmB,QAAA,EAAI;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpBvB,OAAA;MAAIkB,SAAS,EAAC,YAAY;MAAAC,QAAA,EACvBhB,MAAM,CAACqB,MAAM,GAAG,CAAC,GAChBrB,MAAM,CAACsB,GAAG,CAACC,KAAK,iBACd1B,OAAA;QAAmBkB,SAAS,EAAC,YAAY;QAACS,OAAO,EAAEA,CAAA,KAAMX,gBAAgB,CAACU,KAAK,CAACT,EAAE,CAAE;QAAAE,QAAA,EACjFO,KAAK,CAACE;MAAI,GADJF,KAAK,CAACT,EAAE;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEb,CACL,CAAC,gBAEFvB,OAAA;QAAAmB,QAAA,EAAG;MAAwC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IAC/C;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAACrB,EAAA,CAvCID,SAAS;EAAA,QAEIH,WAAW;AAAA;AAAA+B,EAAA,GAFxB5B,SAAS;AAyCf,eAAeA,SAAS;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}