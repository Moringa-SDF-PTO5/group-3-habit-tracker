{"ast":null,"code":"var _jsxFileName = \"/root/Development/Phase-4-Group-Project/group-3-habit-tracker/frontend/src/components/Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './Dashboard.css'; // Import the updated CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [habits, setHabits] = useState([]);\n  useEffect(() => {\n    fetch('/habits.json').then(response => response.json()).then(data => setHabits(data.habits));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"dashboard-title\",\n      children: \"AYour Habits\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"dashboard-list\",\n      children: habits.map(habit => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"dashboard-item\",\n        style: {\n          backgroundColor: getRandomColor()\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: habit.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 13\n        }, this), \": \", habit.description]\n      }, habit.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n\n// Function to generate random bright colors\n_s(Dashboard, \"gIacv8FFx8NWfH/T9k0vnBCdA0k=\");\n_c = Dashboard;\nconst getRandomColor = () => {\n  const letters = '0123456789ABCDEF';\n  let color = '#';\n  for (let i = 0; i < 6; i++) {\n    color += letters[Math.floor(Math.random() * 16)];\n  }\n  return color;\n};\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Dashboard","_s","habits","setHabits","fetch","then","response","json","data","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","habit","style","backgroundColor","getRandomColor","name","description","id","_c","letters","color","i","Math","floor","random","$RefreshReg$"],"sources":["/root/Development/Phase-4-Group-Project/group-3-habit-tracker/frontend/src/components/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './Dashboard.css'; // Import the updated CSS file\n\nconst Dashboard = () => {\n  const [habits, setHabits] = useState([]);\n\n  useEffect(() => {\n    fetch('/habits.json')\n      .then(response => response.json())\n      .then(data => setHabits(data.habits));\n  }, []);\n\n  return (\n    <div className=\"dashboard-container\">\n      <h1 className=\"dashboard-title\">AYour Habits</h1>\n      <ul className=\"dashboard-list\">\n        {habits.map(habit => (\n          <li key={habit.id} className=\"dashboard-item\" style={{ backgroundColor: getRandomColor() }}>\n            <strong>{habit.name}</strong>: {habit.description}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\n// Function to generate random bright colors\nconst getRandomColor = () => {\n  const letters = '0123456789ABCDEF';\n  let color = '#';\n  for (let i = 0; i < 6; i++) {\n    color += letters[Math.floor(Math.random() * 16)];\n  }\n  return color;\n};\n\nexport default Dashboard;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,iBAAiB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAExCC,SAAS,CAAC,MAAM;IACdO,KAAK,CAAC,cAAc,CAAC,CAClBC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAIL,SAAS,CAACK,IAAI,CAACN,MAAM,CAAC,CAAC;EACzC,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEH,OAAA;IAAKU,SAAS,EAAC,qBAAqB;IAAAC,QAAA,gBAClCX,OAAA;MAAIU,SAAS,EAAC,iBAAiB;MAAAC,QAAA,EAAC;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjDf,OAAA;MAAIU,SAAS,EAAC,gBAAgB;MAAAC,QAAA,EAC3BR,MAAM,CAACa,GAAG,CAACC,KAAK,iBACfjB,OAAA;QAAmBU,SAAS,EAAC,gBAAgB;QAACQ,KAAK,EAAE;UAAEC,eAAe,EAAEC,cAAc,CAAC;QAAE,CAAE;QAAAT,QAAA,gBACzFX,OAAA;UAAAW,QAAA,EAASM,KAAK,CAACI;QAAI;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAS,CAAC,MAAE,EAACE,KAAK,CAACK,WAAW;MAAA,GAD1CL,KAAK,CAACM,EAAE;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEb,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;;AAED;AAAAb,EAAA,CAvBMD,SAAS;AAAAuB,EAAA,GAATvB,SAAS;AAwBf,MAAMmB,cAAc,GAAGA,CAAA,KAAM;EAC3B,MAAMK,OAAO,GAAG,kBAAkB;EAClC,IAAIC,KAAK,GAAG,GAAG;EACf,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;IAC1BD,KAAK,IAAID,OAAO,CAACG,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC;EAClD;EACA,OAAOJ,KAAK;AACd,CAAC;AAED,eAAezB,SAAS;AAAC,IAAAuB,EAAA;AAAAO,YAAA,CAAAP,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}