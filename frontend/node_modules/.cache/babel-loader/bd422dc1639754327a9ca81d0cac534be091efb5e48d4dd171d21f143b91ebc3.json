{"ast":null,"code":"var _jsxFileName = \"/root/Development/Phase-4-Group-Project/group-3-habit-tracker/frontend/src/components/HabitDetails.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport './HabitDetails.css'; // Import the updated CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HabitDetails = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [habit, setHabit] = useState(null);\n  useEffect(() => {\n    fetch('/habits.json').then(response => response.json()).then(data => {\n      const habitData = data.habits.find(h => h.id === parseInt(id));\n      setHabit(habitData);\n    });\n  }, [id]);\n  if (!habit) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"details-loading\",\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 22\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"details-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"details-header\",\n      style: {\n        backgroundColor: getRandomColor()\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: habit.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: habit.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"details-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Progress\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"details-list\",\n        children: habit.progress.map(prog => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"details-item\",\n          children: [prog.date, \": \", prog.status]\n        }, prog.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"details-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Reminders\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"details-list\",\n        children: habit.reminders.map(rem => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"details-item\",\n          children: [rem.time, \": \", rem.frequency]\n        }, rem.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n\n// Function to generate random bright colors\n_s(HabitDetails, \"4ZxPV9smHvUgn8lpEaKQRijoFq8=\", false, function () {\n  return [useParams];\n});\n_c = HabitDetails;\nconst getRandomColor = () => {\n  const letters = '0123456789ABCDEF';\n  let color = '#';\n  for (let i = 0; i < 6; i++) {\n    color += letters[Math.floor(Math.random() * 16)];\n  }\n  return color;\n};\nexport default HabitDetails;\nvar _c;\n$RefreshReg$(_c, \"HabitDetails\");","map":{"version":3,"names":["React","useEffect","useState","useParams","jsxDEV","_jsxDEV","HabitDetails","_s","id","habit","setHabit","fetch","then","response","json","data","habitData","habits","find","h","parseInt","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","backgroundColor","getRandomColor","name","description","progress","map","prog","date","status","reminders","rem","time","frequency","_c","letters","color","i","Math","floor","random","$RefreshReg$"],"sources":["/root/Development/Phase-4-Group-Project/group-3-habit-tracker/frontend/src/components/HabitDetails.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport './HabitDetails.css'; // Import the updated CSS file\n\nconst HabitDetails = () => {\n  const { id } = useParams();\n  const [habit, setHabit] = useState(null);\n\n  useEffect(() => {\n    fetch('/habits.json')\n      .then(response => response.json())\n      .then(data => {\n        const habitData = data.habits.find(h => h.id === parseInt(id));\n        setHabit(habitData);\n      });\n  }, [id]);\n\n  if (!habit) return <div className=\"details-loading\">Loading...</div>;\n\n  return (\n    <div className=\"details-container\">\n      <div className=\"details-header\" style={{ backgroundColor: getRandomColor() }}>\n        <h1>{habit.name}</h1>\n        <p>{habit.description}</p>\n      </div>\n      <div className=\"details-section\">\n        <h2>Progress</h2>\n        <ul className=\"details-list\">\n          {habit.progress.map(prog => (\n            <li key={prog.id} className=\"details-item\">{prog.date}: {prog.status}</li>\n          ))}\n        </ul>\n      </div>\n      <div className=\"details-section\">\n        <h2>Reminders</h2>\n        <ul className=\"details-list\">\n          {habit.reminders.map(rem => (\n            <li key={rem.id} className=\"details-item\">{rem.time}: {rem.frequency}</li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n};\n\n// Function to generate random bright colors\nconst getRandomColor = () => {\n  const letters = '0123456789ABCDEF';\n  let color = '#';\n  for (let i = 0; i < 6; i++) {\n    color += letters[Math.floor(Math.random() * 16)];\n  }\n  return color;\n};\n\nexport default HabitDetails;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}