{"ast":null,"code":"var _jsxFileName = \"/root/Development/Phase-4-Group-Project/group-3-habit-tracker/frontend/src/components/Dashboard.js\",\n  _s = $RefreshSig$();\n// src/components/Dashboard.js\nimport React, { useEffect, useState } from 'react';\nimport './Dashboard.css'; // Assuming you have a CSS file for styling\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [habits, setHabits] = useState([]);\n  const [selectedHabit, setSelectedHabit] = useState(null);\n  useEffect(() => {\n    fetch('/habits.json').then(response => response.json()).then(data => {\n      if (Array.isArray(data)) {\n        setHabits(data);\n      } else {\n        console.error('Fetched data is not an array:', data);\n      }\n    }).catch(error => {\n      console.error('Error fetching habits:', error);\n    });\n  }, []);\n  const handleHabitClick = habit => {\n    setSelectedHabit(habit);\n  };\n  const handleDelete = () => {\n    setHabits(habits.filter(habit => habit.id !== selectedHabit.id));\n    setSelectedHabit(null);\n    // Ideally, you would also send a delete request to the server here\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-container\",\n    children: selectedHabit ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"habit-details-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: selectedHabit.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: selectedHabit.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Progress\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: selectedHabit.progress.map(prog => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [prog.date, \": \", prog.status]\n        }, prog.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Reminders\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: selectedHabit.reminders.map(rem => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [rem.time, \": \", rem.frequency]\n        }, rem.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleDelete,\n        className: \"delete-button\",\n        children: \"Delete Habit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setSelectedHabit(null),\n        className: \"back-button\",\n        children: \"Back to Habits\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Your Habits\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"habit-list\",\n        children: habits.length > 0 ? habits.map(habit => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"habit-item\",\n          onClick: () => handleHabitClick(habit),\n          children: habit.name\n        }, habit.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 17\n        }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No habits found. Please add some habits.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"5QWQfxZIHWdhDseYGE0shylIJsQ=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Dashboard","_s","habits","setHabits","selectedHabit","setSelectedHabit","fetch","then","response","json","data","Array","isArray","console","error","catch","handleHabitClick","habit","handleDelete","filter","id","className","children","name","fileName","_jsxFileName","lineNumber","columnNumber","description","progress","map","prog","date","status","reminders","rem","time","frequency","onClick","length","_c","$RefreshReg$"],"sources":["/root/Development/Phase-4-Group-Project/group-3-habit-tracker/frontend/src/components/Dashboard.js"],"sourcesContent":["// src/components/Dashboard.js\nimport React, { useEffect, useState } from 'react';\nimport './Dashboard.css'; // Assuming you have a CSS file for styling\n\nconst Dashboard = () => {\n  const [habits, setHabits] = useState([]);\n  const [selectedHabit, setSelectedHabit] = useState(null);\n\n  useEffect(() => {\n    fetch('/habits.json')\n      .then(response => response.json())\n      .then(data => {\n        if (Array.isArray(data)) {\n          setHabits(data);\n        } else {\n          console.error('Fetched data is not an array:', data);\n        }\n      })\n      .catch(error => {\n        console.error('Error fetching habits:', error);\n      });\n  }, []);\n\n  const handleHabitClick = (habit) => {\n    setSelectedHabit(habit);\n  };\n\n  const handleDelete = () => {\n    setHabits(habits.filter(habit => habit.id !== selectedHabit.id));\n    setSelectedHabit(null);\n    // Ideally, you would also send a delete request to the server here\n  };\n\n  return (\n    <div className=\"dashboard-container\">\n      {selectedHabit ? (\n        <div className=\"habit-details-container\">\n          <h1>{selectedHabit.name}</h1>\n          <p>{selectedHabit.description}</p>\n          <h2>Progress</h2>\n          <ul>\n            {selectedHabit.progress.map(prog => (\n              <li key={prog.id}>{prog.date}: {prog.status}</li>\n            ))}\n          </ul>\n          <h2>Reminders</h2>\n          <ul>\n            {selectedHabit.reminders.map(rem => (\n              <li key={rem.id}>{rem.time}: {rem.frequency}</li>\n            ))}\n          </ul>\n          <button onClick={handleDelete} className=\"delete-button\">Delete Habit</button>\n          <button onClick={() => setSelectedHabit(null)} className=\"back-button\">Back to Habits</button>\n        </div>\n      ) : (\n        <>\n          <h1>Your Habits</h1>\n          <ul className=\"habit-list\">\n            {habits.length > 0 ? (\n              habits.map(habit => (\n                <li key={habit.id} className=\"habit-item\" onClick={() => handleHabitClick(habit)}>\n                  {habit.name}\n                </li>\n              ))\n            ) : (\n              <p>No habits found. Please add some habits.</p>\n            )}\n          </ul>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Dashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}