''''"""empty message

Revision ID: cc5a2bbb4e95
Revises: c6c8a3f92cb1
Create Date: 2024-06-24 20:46:24.519084

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'cc5a2bbb4e95'
down_revision = 'c6c8a3f92cb1'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('user')
    op.drop_table('habit')
    op.drop_table('progress')
    op.drop_table('reminder')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('reminder',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('time', postgresql.TIME(), autoincrement=False, nullable=False),
    sa.Column('frequency', sa.VARCHAR(length=20), autoincrement=False, nullable=False),
    sa.Column('habit_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['habit_id'], ['habit.id'], name='reminder_habit_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='reminder_pkey')
    )
    op.create_table('progress',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('date', sa.DATE(), autoincrement=False, nullable=False),
    sa.Column('status', sa.VARCHAR(length=20), autoincrement=False, nullable=False),
    sa.Column('habit_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['habit_id'], ['habit.id'], name='progress_habit_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='progress_pkey')
    )
    op.create_table('habit',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('description', sa.VARCHAR(length=200), autoincrement=False, nullable=True),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name='habit_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='habit_pkey')
    )
    op.create_table('user',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('username', sa.VARCHAR(length=20), autoincrement=False, nullable=False),
    sa.Column('email', sa.VARCHAR(length=120), autoincrement=False, nullable=False),
    sa.Column('password_hash', sa.VARCHAR(length=60), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='user_pkey'),
    sa.UniqueConstraint('email', name='user_email_key'),
    sa.UniqueConstraint('username', name='user_username_key')
    )
    # ### end Alembic commands ###
'''
# migrations/versions/cc5a2bbb4e95_.py

from alembic import op
import sqlalchemy as sa

# revision identifiers, used by Alembic.
revision = 'cc5a2bbb4e95'
down_revision = 'c6c8a3f92cb1'
branch_labels = None
depends_on = None

def upgrade():
    # Drop foreign key constraint from habit to user
    op.drop_constraint('habit_user_id_fkey', 'habit', type_='foreignkey')
    # Drop the user table
    op.drop_table('user')

def downgrade():
    # Recreate the user table (adjust columns as needed)
    op.create_table(
        'user',
        sa.Column('id', sa.Integer, primary_key=True),
        # other columns...
    )
    # Recreate the foreign key constraint
    op.create_foreign_key(
        'habit_user_id_fkey',
        'habit', 'user',
        ['user_id'], ['id']
    )
